### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Account {
  createdAt: DateTime!
  deletedAt: DateTime
  id: String!
  name: String!
  updatedAt: DateTime!
  user: User!
}

type AuthPayload {
  token: String
  user: User
}

enum AuthType {
  Apple
  Email
  Facebook
  Google
}

type Category {
  createdAt: DateTime!
  deletedAt: DateTime
  id: String!
  name: String!
  type: TransactionType!
  updatedAt: DateTime!
  user: User!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

scalar DateTime

type Mutation {
  changePassword(hash: String!, password: String!): String
  checkHashEmail(hash: String!): String
  createAccount(name: String!): Account
  createCategory(name: String!, type: TransactionType!): Category
  createOperation(accountId: String!, categoryId: String, name: String!, type: TransactionType!, value: Float!): Operation
  login(email: String!, password: String!): AuthPayload
  register(user: UserCreateInput!): String
  requestChangePassword(email: String!): String
  updateProfile(user: UserUpdateInput): User
}

type Operation {
  account: Account!
  category: Category
  createdAt: DateTime!
  deletedAt: DateTime
  id: String!
  name: String!
  type: TransactionType!
  updatedAt: DateTime!
  user: User!
  value: Float!
}

type Query {
  categories(name: String): [Category]
  me: User
  operations: [Operation]
}

type Subscription {
  userSignedIn(userId: String!): User
  userUpdated(userId: String!): User
}

enum TransactionType {
  CreditCard
  Deposit
  FixedExpense
  VariableExpense
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  accounts: [Account!]!
  birthDay: DateTime
  categories: [Category!]!
  createdAt: DateTime!
  deletedAt: DateTime
  email: String!
  firstName: String!
  hasVerifiedEmail: Boolean!
  id: String!
  lastName: String!
  updatedAt: DateTime!
}

input UserCreateInput {
  birthday: Date
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  statusMessage: String
}

input UserUpdateInput {
  birthday: Date
  email: String
  name: String
  nickname: String
  phone: String
  statusMessage: String
}
